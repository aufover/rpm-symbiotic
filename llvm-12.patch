# Symbiotic
--- a/lib/symbioticpy/symbiotic/optimizations.py	2021-02-19 10:47:44.873129950 +0100
+++ b/lib/symbioticpy/symbiotic/optimizations.py	2021-02-19 11:21:55.250255364 +0100
@@ -12,7 +12,7 @@
     'klee':
     ['-simplifycfg', '-globalopt', '-globaldce', '-ipconstprop',
      '-deadargelim', '-instcombine', '-simplifycfg', '-prune-eh',
-     '-functionattrs',
+     '-function-attrs',
      # if we inline too much, then the analysis take too long and
      # witnesses are useless (default is 255)
      '-inline-threshold=70',
@@ -28,11 +28,11 @@
 
     # -O3 optimizations list from opt 3.8 without the vectorizers
     'O3':
-    ['-tti', '-targetlibinfo', '-tbaa', '-scoped-noalias',
+    ['-tti', '-targetlibinfo', '-tbaa', '-scoped-noalias-aa',
      '-assumption-cache-tracker', '-verify', '-simplifycfg', '-domtree',
      '-sroa',
      '-early-cse', '-lower-expect',
-     '-targetlibinfo', '-tti', '-tbaa', '-scoped-noalias',
+     '-targetlibinfo', '-tti', '-tbaa', '-scoped-noalias-aa',
      '-assumption-cache-tracker', '-forceattrs', '-inferattrs', '-ipsccp',
      '-globalopt', '-domtree',
      '-mem2reg',
@@ -42,7 +42,7 @@
      # if we inline too much, then the analysis take too long and
      # witnesses are useless (default is 255)
      '-inline-threshold=70',
-     '-inline', '-functionattrs', '-argpromotion', '-domtree',
+     '-inline', '-function-attrs', '-argpromotion', '-domtree',
      '-sroa',
      '-early-cse', '-lazy-value-info', '-jump-threading',
      '-correlated-propagation', '-simplifycfg', '-basicaa', '-aa', '-domtree',
@@ -69,7 +69,7 @@
      '-jump-threading', '-correlated-propagation', '-domtree', '-basicaa',
      '-aa', '-memdep', '-dse', '-loops', '-loop-simplify', '-lcssa', '-aa',
      '-licm', '-adce', '-simplifycfg', '-basicaa', '-aa', '-domtree',
-     '-instcombine', '-barrier', '-basiccg', '-rpo-functionattrs',
+     '-instcombine', '-barrier', '-basiccg', '-rpo-function-attrs',
      '-elim-avail-extern', '-basiccg', '-globals-aa', '-float2int', '-domtree',
      '-loops',
      '-loop-simplify', '-lcssa',
@@ -90,10 +90,10 @@
 
     # -O2 optimizations list from opt 3.8 without the vectorizers
     'O2':
-    ['-tti', '-targetlibinfo', '-tbaa', '-scoped-noalias',
+    ['-tti', '-targetlibinfo', '-tbaa', '-scoped-noalias-aa',
      '-assumption-cache-tracker', '-verify', '-simplifycfg', '-domtree',
      '-sroa', '-early-cse', '-lower-expect',
-     '-targetlibinfo', '-tti', '-tbaa', '-scoped-noalias',
+     '-targetlibinfo', '-tti', '-tbaa', '-scoped-noalias-aa',
      '-assumption-cache-tracker', '-forceattrs', '-inferattrs', '-ipsccp',
      '-globalopt', '-domtree', '-mem2reg', '-deadargelim', '-basicaa', '-aa',
      '-domtree', '-instcombine', '-simplifycfg', '-basiccg', '-globals-aa',

# sbt-transforms
diff --git a/transforms/CloneMetadata.cpp b/transforms/CloneMetadata.cpp
index e47d6fe..6c5e4b1 100644
--- a/transforms/CloneMetadata.cpp
+++ b/transforms/CloneMetadata.cpp
@@ -53,7 +53,7 @@ bool CloneMetadata(const llvm::Instruction *i1, llvm::Instruction *i2)
     } else {
       DebugLoc DL;
       if (auto SP = i1->getParent()->getParent()->getSubprogram()) {
-        DL = DebugLoc::get(SP->getScopeLine(), 0, SP);
+        DL = DILocation::get(SP->getContext(), SP->getScopeLine(), 0, SP);
       }
       i2->setDebugLoc(DL);
     }

# sbt-instrumentation
diff --git a/sbt-instrumentation/src/instr.cpp b/sbt-instrumentation/src/instr.cpp
index 282637d..d32be1d 100644
--- a/sbt-instrumentation/src/instr.cpp
+++ b/sbt-instrumentation/src/instr.cpp
@@ -309,9 +309,8 @@ bool cloneMetadata(const llvm::Instruction *i1, llvm::Instruction *i2) {
         return cloneMetadata(pred->getTerminator(), i2);
     } else {
       DebugLoc DL;
-      if (auto SP = i1->getParent()->getParent()->getSubprogram()) {
-        DL = DebugLoc::get(SP->getScopeLine(), 0, SP);
-      }
+      if (auto SP = i1->getParent()->getParent()->getSubprogram())
+        DL = DILocation::get(SP->getContext(), SP->getScopeLine(), 0, SP);
       i2->setDebugLoc(DL);
     }
 
